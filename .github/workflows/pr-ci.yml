name: PR CI

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main ]               # run CI when pushing to main
    paths:                           # optional: only when relevant files change
      - '**/*.py'
      - 'requirements.txt'
      - 'Dockerfile'
      - 'templates/**'
      - 'tests/**'
      - '.github/workflows/**'

jobs:
  secrets-scan:
    name: Secret scan (trufflehog v3)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # trufflehog 'git' mode needs history
      - name: Run trufflehog (git history, verified only)
        run: |
          docker run --rm -v "$PWD:/src" -w /src trufflesecurity/trufflehog:latest \
            git file:///src --only-verified --json --fail

  ci:
    needs: [secrets-scan]   # <— make the main CI wait for (and depend on) the secrets scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest black flake8 pandas openpyxl xlsxwriter

      # >>> Add this block + update to rev2 <<<
      - name: Validate canonical pack structure (rev2)
        run: |
          PYTHONPATH="$PWD" python scripts/validate_financials.py --path samples/sample_financials_rev2_2020_2024.zip

      # ✅ NEW: CSV↔XLSX consistency validator (rev2)
      - name: Validate CSV↔XLSX sample packs (rev2)
        run: python scripts/validate_samples.py

      - name: Lint & format
        run: |
          black --check --diff --color --verbose .
          flake8 .

      - name: Run tests (if present)
        run: |
          if [ -d tests ]; then pytest -q; else echo "No tests yet"; fi

      - name: Build Docker image
        run: |
          docker build -t fingpt-app:ci .

      - name: Smoke test container
        run: |
          docker run -d --name app -p 8000:8000 fingpt-app:ci
          # wait for boot
          for i in {1..20}; do
            if curl -fsS http://localhost:8000/health; then
              echo "health OK"; break
            fi
            echo "waiting for app..."; sleep 3
          done
          # show logs if failed
          if ! curl -fsS http://localhost:8000/health; then
            docker logs app; exit 1
          fi
          docker stop app
          docker rm app
